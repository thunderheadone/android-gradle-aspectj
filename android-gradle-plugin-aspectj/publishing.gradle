/*
 *    Copyright 2018 the original author or authors.
 *    Copyright 2018 Thunderhead
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */


// Used as base: https://raw.githubusercontent.com/kostasdrakonakis/maven-upload/master/publications.gradle

apply plugin: 'maven'
apply plugin: 'maven-publish'

version = pluginVersion
group = publishedGroupId

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// Generate javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Create the pom configuration with maven-publish plugin.
def pomConfig = {
    licenses {
        license {
            name licenseName
            url licenseUrl
            distribution "repo"
        }
    }
    developers {
        developer {
            id developerId
            name developerName
            email developerEmail
        }
    }
    scm {
        url gitUrl
    }
}

// Get the artifacts
artifacts {
    archives javadocJar
    archives sourcesJar
}

// Create the publication with the pom configuration:
publishing {
    publications {
        ThunderheadAndroidGradle(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId publishedGroupId
            artifactId artifact
            version pluginVersion
            pom.withXml {
                def root = asNode()
                root.appendNode('description', pluginDescription)
                root.appendNode('name', pluginName)
                root.appendNode('url', siteUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

